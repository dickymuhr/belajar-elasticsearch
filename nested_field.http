### SIMULATE THE PROBLEM
### create index parent
PUT http://localhost:9200/parents

### Update parents mapping
PUT http://localhost:9200/parents/_mapping
Content-Type: application/json

{
    "properties": {
        "first_name" : {
            "type":"text"
        },
        "last_name" : {
            "type":"text"
        },
        "children" : {
            "properties": {
                "first_name" : {
                    "type":"text"
                },
                "last_name" : {
                    "type":"text"
                }
            }
        }
    }
}

### Get parents mapping
GET http://localhost:9200/parents/_mapping

### INSERT data
POST http://localhost:9200/parents/_doc/1
Content-Type: application/json

{
  "first_name": "Eko",
  "last_name": "Khannedy",
  "children": [
    {
      "first_name": "Joko",
      "last_name": "Morro"
    },
    {
      "first_name": "Budi",
      "last_name": "Nugraha"
    }
  ]
}
### Get data
GET http://localhost:9200/parents/_doc/1

### Get non exixting doc
### Found
POST http://localhost:9200/parents/_search
Content-Type: application/json

{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "children.first_name": "Joko"
          }
        },
        {
          "match": {
            "children.last_name": "Nugraha"
          }
        }
      ]
    }
  }
}


### NESTED FIELD
### delete
DELETE http://localhost:9200/parents
### re-create index parent
PUT http://localhost:9200/parents

### Update Parents Mapping with Nested Children
PUT http://localhost:9200/parents/_mapping
Content-Type: application/json

{
  "properties": {
    "first_name": {
      "type": "text"
    },
    "last_name": {
      "type": "text"
    },
    "children": {
      "type": "nested",
      "properties": {
        "first_name": {
          "type": "text"
        },
        "last_name": {
          "type": "text"
        }
      }
    }
  }
}

### Get parents mapping
GET http://localhost:9200/parents/_mapping

### INSERT data
POST http://localhost:9200/parents/_doc/1
Content-Type: application/json

{
  "first_name": "Eko",
  "last_name": "Khannedy",
  "children": [
    {
      "first_name": "Joko",
      "last_name": "Morro"
    },
    {
      "first_name": "Budi",
      "last_name": "Nugraha"
    }
  ]
}

### Search Children
### Non existing document not found
POST http://localhost:9200/parents/_search
Content-Type: application/json

{
  "query": {
    "nested": {
        "path" : "children",
        "query":{
            "bool": {
                "must": [
                    {
                        "match": {
                            "children.first_name": "Joko"
                        }
                        },
                        {
                        "match": {
                            "children.last_name": "Nugraha"
                        }
                    }
                ]
            }
        }
    }
  }
}


### ALTERNATE TO THIS PROBLEM
### Create third propertis called full_name which is first + last name